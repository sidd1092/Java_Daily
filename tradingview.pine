//@version=6
indicator(title="4hr MACD Position", shorttitle="4hr MACD", timeframe="4H", timeframe_gaps=true)
// Getting inputs
fast_length = input(title = "Fast Length", defval = 12)
slow_length = input(title = "Slow Length", defval = 26)
src = input(title = "Source", defval = close)
signal_length = input.int(title = "Signal Smoothing",  minval = 1, maxval = 50, defval = 9, display = display.data_window)
sma_source = input.string(title = "Oscillator MA Type",  defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
sma_signal = input.string(title = "Signal Line MA Type", defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal

alertcondition(hist[1] >= 0 and hist < 0, title = 'Rising to falling', message = 'The MACD histogram switched from a rising to falling state')
alertcondition(hist[1] <= 0 and hist > 0, title = 'Falling to rising', message = 'The MACD histogram switched from a falling to rising state')

hline(0, "Zero Line", color = color.new(#787B86, 50))
plot(hist, title = "Histogram", style = plot.style_columns, color = (hist >= 0 ? (hist[1] < hist ? #178d13 : color.orange) : (hist[1] < hist ? color.orange : #e91c1c)))
plot(macd,   title = "MACD",   color = #2962FF)
plot(signal, title = "Signal", color = #FF6D00)


// add the following to the above code, a black line is to be added in the top layer and the cordinate value is determine by dividing the closing price of the last candle of a day before to current day by 500
var float closePrice = na
if (dayofmonth(time) == dayofmonth(time[1]) and month(time) == month(time[1]) and year(time) == year(time[1]))
    closePrice := close[1] / 500

if (not na(closePrice))
    line.new(x1=timestamp(year(time[1]), month(time[1]), dayofmonth(time[1]), 00, 00), y1=closePrice, x2=timestamp(year(time[1]), month(time[1]), dayofmonth(time[1]), 23, 59), y2=closePrice, color=color.black, width=4)

